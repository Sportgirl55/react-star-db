{"version":3,"sources":["components/Header/index.js","components/Header/Header.jsx","services/swapi-service.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.jsx","components/Spinner/index.js","components/Spinner/Spinner.jsx","components/RandomPlanet/RandomPlanet.jsx","components/RandomPlanet/index.js","components/ErrorBoundry/ErrorBoundry.jsx","components/SwapiServiceContext/SwapiServiceContext.js","components/Row/index.js","components/Row/Row.jsx","components/ItemList/ItemList.jsx","components/hoc-helpers/WithData.js","components/hoc-helpers/WithSwapiService.js","components/sw-components/ItemLists.js","components/ItemDetails/ItemDetails.jsx","components/ItemDetails/index.js","components/sw-components/PersonDetails.js","components/Pages/PeoplePage.jsx","components/sw-components/PlanetDetails.js","components/Pages/PlanetsPage.jsx","components/Pages/StarshipsPage.jsx","components/Pages/LoginPage.jsx","components/Pages/SecretPage.jsx","components/sw-components/StarshipDetails.js","components/App/index.js","components/App/App.jsx","index.js"],"names":["Header","className","to","SwapiService","_apiBase","_imageBase","getResource","url","a","fetch","res","ok","Error","status","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","getPersonImage","getStarshipImage","getPlanetImage","_extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color","ErrorIndicator","Spinner","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","Math","floor","random","then","catch","updateInterval","this","props","interval","setInterval","clearInterval","hasData","errorMessage","spinner","content","Component","defaultProps","PlanetView","src","alt","ErrorBoundry","hasError","children","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","Row","left","right","ItemList","data","onItemSelected","renderLabel","items","label","onClick","WithData","View","update","getData","WithSwapiService","mapMethodsToProps","Wrapped","serviceProps","withChildFunction","fn","renderName","PersonList","PlanetList","StarshipList","Record","field","ItemDetails","image","updateItem","prevProps","itemId","getImageUrl","Children","child","cloneElement","PeoplePage","history","params","push","PlanetsPage","selectedItem","withRouter","LoginPage","isLoggedIn","onLogin","SecretPage","App","value","path","exact","render","component","StarshipsPage","location","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c44e89f5.chunk.js","sourcesContent":["import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.scss'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h3>\r\n        <Link to=\"/\">\r\n          Star DB\r\n        </Link>\r\n      </h3>\r\n      <ul className=\"header-list\">\r\n        <li>\r\n          <Link to=\"/people/\">People</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/planets/\">Planets</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/starships/\">Starships</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/login\">Login</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/secret\">Secret</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","export default class SwapiService {\r\n  _apiBase = \"https://swapi.dev/api\";\r\n  _imageBase = \"https://starwars-visualguide.com/assets/img\";\r\n\r\n  getResource = async (url) => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}``, received ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  };\r\n\r\n  getAllPeople = async () => {\r\n    const res = await this.getResource(`/people/`);\r\n    return res.results.map(this._transformPerson);\r\n  };\r\n\r\n  getPerson = async (id) => {\r\n    const person = await this.getResource(`/people/${id}/`);\r\n    return this._transformPerson(person);\r\n  };\r\n\r\n  getAllPlanets = async () => {\r\n    const res = await this.getResource(`/planets/`);\r\n    return res.results.map(this._transformPlanet);\r\n  };\r\n\r\n  getPlanet = async (id) => {\r\n    const planet = await this.getResource(`/planets/${id}/`);\r\n    return this._transformPlanet(planet);\r\n  };\r\n\r\n  getAllStarships = async () => {\r\n    const res = await this.getResource(`/starships/`);\r\n    return res.results.map(this._transformStarship);\r\n  };\r\n\r\n  getStarship = async (id) => {\r\n    const starship = await this.getResource(`/starships/${id}/`);\r\n    return this._transformStarship(starship);\r\n  };\r\n\r\n  getPersonImage = ({ id }) => {\r\n    return `${this._imageBase}/characters/${id}.jpg`;\r\n  };\r\n\r\n  getStarshipImage = ({ id }) => {\r\n    return `${this._imageBase}/starships/${id}.jpg`;\r\n  };\r\n\r\n  getPlanetImage = ({ id }) => {\r\n    return `${this._imageBase}/planets/${id}.jpg`;\r\n  };\r\n\r\n  _extractId = (item) => {\r\n    const idRegExp = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(idRegExp)[1];\r\n  };\r\n\r\n  _transformPlanet = (planet) => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      diameter: planet.diameter,\r\n    };\r\n  };\r\n\r\n  _transformStarship = (starship) => {\r\n    return {\r\n      id: this._extractId(starship),\r\n      name: starship.name,\r\n      model: starship.model,\r\n      manufacturer: starship.manufacturer,\r\n      costInCredits: starship.cost_in_credits,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passengers: starship.passengers,\r\n      cargoCapacity: starship.cargo_capacity,\r\n    };\r\n  };\r\n\r\n  _transformPerson = (person) => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      birthYear: person.birth_year,\r\n      eyeColor: person.eye_color,\r\n    };\r\n  };\r\n}\r\n","import ErrorIndicator from './ErrorIndicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './ErrorIndicator.scss';\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"error-indicator\">\r\n      <span className=\"boom\">BOOM!</span>\r\n      <span>something gas go terribly wrong</span>\r\n      <span>(but we already sent droids to fix it)</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorIndicator;\r\n\r\n\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-double-ring-uiwvl384rtl\">\r\n      <div className=\"ldio-e5bd2t5wclo\">\r\n        <div></div>\r\n        <div></div>\r\n        <div><div></div></div>\r\n        <div><div></div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport SwapiService from '../../services/swapi-service'\r\nimport ErrorIndicator from '../ErrorIndicator';\r\nimport Spinner from '../Spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './RandomPlanet.scss';\r\n\r\nexport default class RandomPlanet extends Component {\r\n  static defaultProps = {\r\n    updateInterval: 10000\r\n  };\r\n\r\n  static propTypes = {\r\n    updateInterval: PropTypes.number\r\n  };\r\n\r\n  swapiService = new SwapiService();\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { updateInterval } = this.props;\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, updateInterval)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  onPlanetLoaded = (planet) => {\r\n    this.setState({\r\n      planet,\r\n      loading: false,\r\n      error: false\r\n    })\r\n  }\r\n\r\n  onError = (err) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random() * 18) + 2;\r\n    this.swapiService\r\n      .getPlanet(id)\r\n      .then(this.onPlanetLoaded)\r\n      .catch(this.onError);\r\n  }\r\n\r\n  render() {\r\n    const { planet, loading, error } = this.state;\r\n    const hasData = !(loading || error);\r\n    const errorMessage = error ? <ErrorIndicator /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasData ? <PlanetView planet={planet} /> : null;\r\n\r\n    return (\r\n      <div className=\"random-planet rounded\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PlanetView = ({ planet }) => {\r\n  const { id, name, population,\r\n    rotationPeriod, diameter }\r\n    = planet;\r\n  return (\r\n    <>\r\n      <img className=\"planet-image\"\r\n        src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt={name} />\r\n      <div>\r\n        <h4>{name}</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Population</span>\r\n            <span>{population}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Rotation Period</span>\r\n            <span>{rotationPeriod}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Diameter</span>\r\n            <span>{diameter}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  )\r\n}","import RandomPlanet from './RandomPlanet';\r\n\r\nexport default RandomPlanet;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../ErrorIndicator';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    })\r\n  }\r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <ErrorIndicator />\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundry;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst { Provider: SwapiServiceProvider, Consumer: SwapiServiceConsumer } =\r\n  React.createContext();\r\n\r\nexport { SwapiServiceProvider, SwapiServiceConsumer };\r\n","import Row from './Row';\r\n\r\nexport default Row;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Row = ({ left, right }) => {\r\n  return (\r\n    <div className=\"app-wrap\">\r\n      <div className=\"col-md-6\">\r\n        {left}\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        {right}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nRow.propTypes = {\r\n  left: PropTypes.node,\r\n  right: PropTypes.node\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ItemList.scss';\r\n\r\nconst ItemList = (props) => {\r\n  const {data, onItemSelected, children: renderLabel} = props;\r\n  const items = data.map((item) => {\r\n    const { id } = item;\r\n    const label = renderLabel(item);\r\n\r\n    return (\r\n      <li className=\"list-group-item\"\r\n        key={id}\r\n        onClick={() => onItemSelected(id)}>\r\n        {label}\r\n      </li>\r\n    )\r\n  })\r\n  return (\r\n    <ul className=\"item-list list-group\">\r\n      {items}\r\n    </ul>\r\n  );\r\n} \r\n\r\nItemList.defaultProps = {\r\n  onItemSelected: () => {}\r\n};\r\n\r\nItemList.propTypes ={\r\n  onItemSelected: PropTypes.func,\r\n  data: PropTypes.arrayOf(PropTypes.objectOf).isRequired,\r\n  children: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default ItemList;","import React, { Component } from \"react\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nconst WithData = (View) => {\r\n  return class extends Component {\r\n    state = {\r\n      data: null,\r\n      loading: true,\r\n      error: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.update();\r\n    }\r\n\r\n    update() {\r\n      this.setState({\r\n        loading: true,\r\n        error: false,\r\n      });\r\n\r\n      this.props\r\n        .getData()\r\n        .then((data) => {\r\n          this.setState({\r\n            data,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            error: true,\r\n            loading: false,\r\n          });\r\n        });\r\n    }\r\n\r\n    render() {\r\n      const { data, loading, error } = this.state;\r\n\r\n      if (loading) {\r\n        return <Spinner />;\r\n      }\r\n      if (error) {\r\n        return <ErrorIndicator />;\r\n      }\r\n      return <View {...this.props} data={data} />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default WithData;\r\n","import React from \"react\";\r\nimport { SwapiServiceConsumer } from \"../SwapiServiceContext\";\r\n\r\nconst WithSwapiService = (mapMethodsToProps) => (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <SwapiServiceConsumer>\r\n        {\r\n          (swapiService) => {\r\n            const serviceProps = mapMethodsToProps(swapiService)\r\n            return (\r\n              <Wrapped {...props} {...serviceProps} />\r\n            )\r\n          }\r\n        }\r\n      </SwapiServiceConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WithSwapiService;\r\n","import React from \"react\";\r\nimport ItemList from \"../ItemList/ItemList\";\r\nimport { WithData, WithSwapiService } from \"../hoc-helpers\";\r\n\r\nconst withChildFunction = (fn) => (Wrapped) => {\r\n  return (props) => {\r\n    return <Wrapped {...props}>{fn}</Wrapped>;\r\n  };\r\n};\r\n\r\nconst renderName = ({ name }) => <span>{name}</span>;\r\nconst renderModelAndName = ({ name, model }) => (\r\n  <span>\r\n    {name} ({model})\r\n  </span>\r\n);\r\n\r\nconst mapPersonMethodsToProps = (swapiService) => {\r\n  return {\r\n    getData: swapiService.getAllPeople,\r\n  };\r\n};\r\nconst mapPlanetMethodsToProps = (swapiService) => {\r\n  return {\r\n    getData: swapiService.getAllPlanets,\r\n  };\r\n};\r\nconst mapStarshipMethodsToProps = (swapiService) => {\r\n  return {\r\n    getData: swapiService.getAllStarships,\r\n  };\r\n};\r\n\r\nconst PersonList = WithSwapiService(mapPersonMethodsToProps)(\r\n  WithData(withChildFunction(renderName)(ItemList))\r\n);\r\n\r\nconst PlanetList = WithSwapiService(mapPlanetMethodsToProps)(\r\n  WithData(withChildFunction(renderName)(ItemList))\r\n);\r\n\r\nconst StarshipList = WithSwapiService(mapStarshipMethodsToProps)(\r\n  WithData(withChildFunction(renderModelAndName)(ItemList))\r\n);\r\n\r\nexport { PersonList, PlanetList, StarshipList };\r\n","import React, { Component } from 'react';\r\nimport './ItemDetails.scss';\r\n\r\nconst Record = ({ item, field, label }) => {\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <span className=\"term\">{label}</span>\r\n      <span>{item[field]}</span>\r\n    </li>\r\n  )\r\n};\r\n\r\nexport { Record };\r\n\r\nexport default class ItemDetails extends Component {\r\n  state = {\r\n    item: null,\r\n    image: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateItem()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.itemId !== prevProps.itemId) {\r\n      this.updateItem()\r\n    }\r\n  }\r\n\r\n  updateItem() {\r\n    const { itemId, getData, getImageUrl } = this.props;\r\n    if (!itemId) {\r\n      return;\r\n    }\r\n\r\n    getData(itemId)\r\n      .then((item) => {\r\n        this.setState({\r\n          item,\r\n          image: getImageUrl(item)\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { item, image } = this.state;\r\n    if (!item) {\r\n      return <span>Select an item from the list</span>\r\n    }\r\n\r\n    const { name } = item;\r\n\r\n    return (\r\n      <div className=\"item-details card\">\r\n        <img className=\"item-image\"\r\n          src={image}\r\n          alt=\"item\" />\r\n\r\n        <div className=\"card-body\">\r\n\r\n          <h4>{name}</h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {\r\n              React.Children.map(this.props.children, (child) => {\r\n                return React.cloneElement(child, { item });\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import ItemDetails from './ItemDetails';\r\n\r\nexport default ItemDetails;","import React from \"react\";\r\nimport { WithSwapiService } from \"../hoc-helpers\";\r\nimport ItemDetails from \"../ItemDetails\";\r\nimport { Record } from \"../ItemDetails/ItemDetails\";\r\n\r\nconst PersonDetails = (props) => {\r\n  return (\r\n    <ItemDetails {...props}>\r\n      <Record field=\"gender\" label=\"Gender\" />\r\n      <Record field=\"eyeColor\" label=\"Eye Color\" />\r\n    </ItemDetails>\r\n  );\r\n};\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n  return {\r\n    getData: swapiService.getPerson,\r\n    getImageUrl: swapiService.getPersonImage,\r\n  };\r\n};\r\n\r\nexport default WithSwapiService(mapMethodsToProps)(PersonDetails);\r\n","import React from 'react';\r\nimport Row from '../Row';\r\n\r\nimport { PersonList } from '../sw-components/ItemLists';\r\nimport PersonDetails from '../sw-components/PersonDetails';\r\n\r\nconst PeoplePage = ({ history, match }) => {\r\n  const { id } = match.params;\r\n  return (\r\n    <Row\r\n      left={<PersonList onItemSelected={(id) => history.push(id)} />}\r\n      right={<PersonDetails itemId={id} />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PeoplePage;\r\n\r\n\r\n","import React from \"react\";\r\nimport { WithSwapiService } from \"../hoc-helpers\";\r\nimport ItemDetails from \"../ItemDetails\";\r\nimport { Record } from \"../ItemDetails/ItemDetails\";\r\n\r\nconst PlanetDetails = (props) => {\r\n  return (\r\n    <ItemDetails {...props}>\r\n      <Record field=\"population\" label=\"Population\" />\r\n      <Record field=\"rotationPeriod\" label=\"Rotation Period\" />\r\n      <Record field=\"diameter\" label=\"Diameter\" />\r\n    </ItemDetails>\r\n  );\r\n};\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n  return {\r\n    getData: swapiService.getPlanet,\r\n    getImageUrl: swapiService.getPlanetImage,\r\n  };\r\n};\r\n\r\nexport default WithSwapiService(mapMethodsToProps)(PlanetDetails);\r\n","import React, { Component } from 'react';\r\nimport Row from '../Row';\r\nimport { PlanetList } from '../sw-components/ItemLists';\r\nimport PlanetDetails from '../sw-components/PlanetDetails';\r\n\r\n\r\nexport default class PlanetsPage extends Component {\r\n  state = {\r\n    selectedItem: null\r\n  }\r\n\r\n  onItemSelected = (selectedItem) => {\r\n    this.setState({\r\n      selectedItem\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { selectedItem } = this.state;\r\n    return (\r\n      <Row\r\n        left={<PlanetList onItemSelected={this.onItemSelected} />}\r\n        right={<PlanetDetails itemId={selectedItem} />}\r\n      />\r\n    )\r\n\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { StarshipList } from '../sw-components/ItemLists';\r\n\r\nconst StarshipsPage = ({ history }) => {\r\n  return (\r\n    <StarshipList onItemSelected={(id) => history.push(id)} />\r\n  )\r\n}\r\n\r\nexport default withRouter(StarshipsPage);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst LoginPage = ({ isLoggedIn, onLogin }) => {\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <p>Login to the secret page!</p>\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        onClick={onLogin}>\r\n        Login\r\n      </button>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default LoginPage;\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst SecretPage = ({ isLoggedIn }) => {\r\n  if (isLoggedIn) {\r\n    return (\r\n      <div className=\"jumbotron text-center\">\r\n        <h3>This page is full of secrets!!!</h3>\r\n      </div>\r\n    )\r\n  } return <Redirect to=\"/login\" />\r\n}\r\n\r\nexport default SecretPage;\r\n\r\n\r\n","import React from \"react\";\r\nimport { WithSwapiService } from \"../hoc-helpers\";\r\nimport ItemDetails from \"../ItemDetails\";\r\nimport { Record } from \"../ItemDetails/ItemDetails\";\r\n\r\nconst StarshipDetails = (props) => {\r\n  return (\r\n    <ItemDetails {...props}>\r\n      <Record field=\"model\" label=\"Model\" />\r\n      <Record field=\"length\" label=\"Length\" />\r\n      <Record field=\"costInCredits\" label=\"Cost\" />\r\n    </ItemDetails>\r\n  );\r\n};\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n  return {\r\n    getData: swapiService.getStarship,\r\n    getImageUrl: swapiService.getStarshipImage,\r\n  };\r\n};\r\n\r\nexport default WithSwapiService(mapMethodsToProps)(StarshipDetails);\r\n","import App from './App';\r\n\r\nexport default App;","import React, { Component } from \"react\";\r\nimport Header from \"../Header\";\r\nimport RandomPlanet from \"../RandomPlanet\";\r\nimport ErrorBoundry from \"../ErrorBoundry/ErrorBoundry\";\r\nimport SwapiService from '../../services/swapi-service';\r\nimport { SwapiServiceProvider } from '../SwapiServiceContext';\r\nimport './App.scss';\r\nimport { PeoplePage, PlanetsPage, StarshipsPage, LoginPage, SecretPage } from \"../Pages\";\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport StarshipDetails from \"../sw-components/StarshipDetails\";\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    swapiService: new SwapiService(),\r\n    isLoggedIn: false\r\n  };\r\n\r\n  onLogin = () => {\r\n    this.setState({\r\n      isLoggedIn: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn } = this.state;\r\n    return (\r\n      <ErrorBoundry>\r\n        <SwapiServiceProvider value={this.state.swapiService}>\r\n          <Router>\r\n            <div className=\"app\">\r\n              <Header />\r\n              <RandomPlanet />\r\n\r\n              <Switch>\r\n\r\n                <Route path=\"/\" exact render={() => <h2>Welcome to StarDB</h2>} />\r\n                <Route path=\"/people/:id?\" component={PeoplePage} />\r\n                <Route path=\"/planets\" component={PlanetsPage} />\r\n                <Route path=\"/starships\" exact component={StarshipsPage} />\r\n\r\n                <Route path=\"/starships/:id\"\r\n                  render={({ match, location, history }) => {\r\n                    const { id } = match.params;\r\n                    return <StarshipDetails itemId={id} />\r\n                  }}\r\n                />\r\n\r\n                <Route path=\"/login\"\r\n                  render={() => (\r\n                    <LoginPage\r\n                      isLoggedIn={isLoggedIn}\r\n                      onLogin={this.onLogin} />\r\n                  )} />\r\n                <Route path=\"/secret\"\r\n                  render={() => (\r\n                    <SecretPage isLoggedIn={isLoggedIn} />\r\n                  )} />\r\n                <Route render={() => <h2>Page not found</h2>} />\r\n              </Switch>\r\n\r\n            </div>\r\n          </Router>\r\n\r\n        </SwapiServiceProvider>\r\n      </ErrorBoundry>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}